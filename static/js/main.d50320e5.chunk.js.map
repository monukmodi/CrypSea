{"version":3,"sources":["components/ExchangeButton/ExchangeButton.js","components/Exchange/definitions.js","components/Exchange/Exchange.js","components/CryptoChart/definitions.js","components/CryptoChartPeriodValue/CryptoChartPeriodValue.js","components/CryptoChartLineChart/CryptoChartLineChart.js","components/CryptoChart/CryptoChart.js","pages/ExchangeRates/ExchangeRates.js","components/HeaderLogo/HeaderLogo.js","components/Header/Header.js","App.js","index.js"],"names":["ExchangeButton","options","setValue","className","onChange","e","target","value","map","option","text","id","cryptoOptions","fiatOptions","Exchange","setCrypto","setFiat","size","color","periodValues","labelsMonth","labelsDay","labelsWeek","labelsHour","array","i","push","labelsYear","CryptoChartPeriodValue","mode","setMode","setHistoLimit","labelsObj","setLabels","onClick","histo","limit","hour","day","week","month","year","CryptoChartLineChart","labels","data","datasets","label","fill","borderColor","tension","borderWidth","plugins","legend","display","tooltip","enabled","CryptoChart","resultValue","crypto","fiat","useState","histoLimit","priceArr","setPriceArr","helper","useEffect","fetch","then","res","json","Data","d","open","ExchangeRates","setResultValue","HeaderLogo","Header","Chart","defaults","font","family","scale","ticks","grid","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAGe,SAASA,EAAT,GAAgD,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAC9C,OACI,wBACIC,UAAU,iBACVC,SAAU,SAACC,GACPH,EAASG,EAAEC,OAAOC,QAH1B,SAMKN,EAAQO,KAAI,SAACC,GAAD,OACT,wBACIN,UAAU,yBAEVI,MAAOE,EAAOF,MAHlB,SAKKE,EAAOC,MAHHD,EAAOE,SCdzB,IAAMC,EAAgB,CACzB,CACID,GAAI,EACJJ,MAAO,MACPG,KAAM,OAEV,CACIC,GAAI,EACJJ,MAAO,MACPG,KAAM,OAEV,CACIC,GAAI,EACJJ,MAAO,MACPG,KAAM,OAEV,CACIC,GAAI,EACJJ,MAAO,OACPG,KAAM,QAEV,CACIC,GAAI,EACJJ,MAAO,MACPG,KAAM,OAEV,CACIC,GAAI,EACJJ,MAAO,MACPG,KAAM,OAEV,CACIC,GAAI,EACJJ,MAAO,MACPG,KAAM,QAGDG,EAAc,CACvB,CACIF,GAAI,EACJJ,MAAO,MACPG,KAAM,OAEV,CACIC,GAAI,EACJJ,MAAO,MACPG,KAAM,OAEV,CACIC,GAAI,EACJJ,MAAO,MACPG,KAAM,OAEV,CACIC,GAAI,EACJJ,MAAO,MACPG,KAAM,OAEV,CACIC,GAAI,EACJJ,MAAO,MACPG,KAAM,QCvDC,SAASI,EAAT,GAA2C,IAAvBC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAC1C,OACI,sBAAKb,UAAU,WAAf,UACI,cAAC,EAAD,CAAgBF,QAASW,EAAeV,SAAUa,IAClD,cAAC,IAAD,CAAkBE,KAAK,OAAOC,MAAM,kBACpC,cAAC,EAAD,CAAgBjB,QAASY,EAAaX,SAAUc,O,MC2H5D,I,IAtIaG,EAAe,CACxB,CAAER,GAAI,EAAGD,KAAM,MACf,CAAEC,GAAI,EAAGD,KAAM,MACf,CAAEC,GAAI,EAAGD,KAAM,MACf,CAAEC,GAAI,EAAGD,KAAM,MACf,CAAEC,GAAI,EAAGD,KAAM,OAGNU,EAAc,CACvB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAESC,EAAY,CACrB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAESC,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjDC,EAAa,CACtB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGAC,EAAQ,GACHC,EAAI,EAAGA,EAAI,IAAKA,IACrBD,EAAME,KAAKD,GAGR,IAAME,EAAaH,E,MCvIX,SAASI,EAAT,GAQX,IAPAjB,EAOD,EAPCA,GACAD,EAMD,EANCA,KACAmB,EAKD,EALCA,KACAC,EAID,EAJCA,QACAC,EAGD,EAHCA,cACAC,EAED,EAFCA,UACAC,EACD,EADCA,UAEA,OACI,qBACI9B,UACI0B,IAASlB,EACH,uDACA,yBAEVuB,QAAS,WACLJ,EAAQnB,GACG,IAAPA,GACAoB,EAAc,CAAEI,MAAO,SAAUC,MAAO,OACxCH,EAAUD,EAAUK,OACN,IAAP1B,GACPoB,EAAc,CAAEI,MAAO,OAAQC,MAAO,OACtCH,EAAUD,EAAUM,MACN,IAAP3B,GACPoB,EAAc,CAAEI,MAAO,MAAOC,MAAO,MACrCH,EAAUD,EAAUO,OACN,IAAP5B,GACPoB,EAAc,CAAEI,MAAO,MAAOC,MAAO,OACrCH,EAAUD,EAAUQ,SAEpBT,EAAc,CAAEI,MAAO,MAAOC,MAAO,QACrCH,EAAUD,EAAUS,QAtBhC,SA0BK/B,I,iBCnCE,SAASgC,EAAT,GAAiD,IAA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","file":"static/js/main.d50320e5.chunk.js","sourcesContent":["import React from 'react'\nimport './ExchangeButton.css'\n\nexport default function ExchangeButton({ options, setValue }) {\n    return (\n        <select\n            className=\"ExchangeButton\"\n            onChange={(e) => {\n                setValue(e.target.value)\n            }}\n        >\n            {options.map((option) => (\n                <option\n                    className=\"ExchangeButton__option\"\n                    key={option.id}\n                    value={option.value}\n                >\n                    {option.text}\n                </option>\n            ))}\n        </select>\n    )\n}\n","export const cryptoOptions = [\n    {\n        id: 0,\n        value: 'BTC',\n        text: 'BTC',\n    },\n    {\n        id: 1,\n        value: 'ETH',\n        text: 'ETH',\n    },\n    {\n        id: 2,\n        value: 'ADA',\n        text: 'ADA',\n    },\n    {\n        id: 3,\n        value: 'DOGE',\n        text: 'DOGE',\n    },\n    {\n        id: 4,\n        value: 'XRP',\n        text: 'XRP',\n    },\n    {\n        id: 5,\n        value: 'DOT',\n        text: 'DOT',\n    },\n    {\n        id: 6,\n        value: 'BNB',\n        text: 'BNB',\n    },\n]\nexport const fiatOptions = [\n    {\n        id: 0,\n        value: 'USD',\n        text: 'USD',\n    },\n    {\n        id: 1,\n        value: 'EUR',\n        text: 'EUR',\n    },\n    {\n        id: 2,\n        value: 'RUB',\n        text: 'RUB',\n    },\n    {\n        id: 3,\n        value: 'JPY',\n        text: 'JPY',\n    },\n    {\n        id: 4,\n        value: 'KRW',\n        text: 'KRW',\n    },\n]\n","import React from 'react'\nimport './Exchange.css'\nimport { CgArrowsExchange } from 'react-icons/cg'\nimport ExchangeButton from '../ExchangeButton/ExchangeButton'\nimport { cryptoOptions, fiatOptions } from './definitions'\n\nexport default function Exchange({ setCrypto, setFiat }) {\n    return (\n        <div className=\"Exchange\">\n            <ExchangeButton options={cryptoOptions} setValue={setCrypto} />\n            <CgArrowsExchange size=\"4rem\" color=\"darkslateblue\" />\n            <ExchangeButton options={fiatOptions} setValue={setFiat} />\n        </div>\n    )\n}\n","export const periodValues = [\n    { id: 0, text: '1h' },\n    { id: 1, text: '1d' },\n    { id: 2, text: '1w' },\n    { id: 3, text: '1m' },\n    { id: 4, text: '1y' },\n]\n\nexport const labelsMonth = [\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    '10',\n    '11',\n    '12',\n    '13',\n    '14',\n    '15',\n    '16',\n    '17',\n    '18',\n    '19',\n    '20',\n    '21',\n    '22',\n    '23',\n    '24',\n    '25',\n    '26',\n    '27',\n    '28',\n    '29',\n    '30',\n]\nexport const labelsDay = [\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    '10',\n    '11',\n    '12',\n    '13',\n    '14',\n    '15',\n    '16',\n    '17',\n    '18',\n    '19',\n    '20',\n    '21',\n    '22',\n    '23',\n    '24',\n]\nexport const labelsWeek = ['0', '1', '2', '3', '4', '5', '6', '7']\nexport const labelsHour = [\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    '10',\n    '11',\n    '12',\n    '13',\n    '14',\n    '15',\n    '16',\n    '17',\n    '18',\n    '19',\n    '20',\n    '21',\n    '22',\n    '23',\n    '24',\n    '25',\n    '26',\n    '27',\n    '28',\n    '29',\n    '30',\n    '31',\n    '32',\n    '33',\n    '34',\n    '35',\n    '36',\n    '37',\n    '38',\n    '39',\n    '40',\n    '41',\n    '42',\n    '43',\n    '44',\n    '45',\n    '46',\n    '47',\n    '48',\n    '49',\n    '50',\n    '51',\n    '52',\n    '53',\n    '54',\n    '55',\n    '56',\n    '57',\n    '58',\n    '59',\n    '60',\n]\n\nlet array = []\nfor (let i = 0; i < 366; i++) {\n    array.push(i)\n}\n\nexport const labelsYear = array\n","import React from 'react'\nimport './CryptoChartPeriodValue.css'\n\nexport default function CryptoChartPeriodValue({\n    id,\n    text,\n    mode,\n    setMode,\n    setHistoLimit,\n    labelsObj,\n    setLabels,\n}) {\n    return (\n        <div\n            className={\n                mode === id\n                    ? 'CryptoChartPeriodValue CryptoChartPeriodValue-active'\n                    : 'CryptoChartPeriodValue'\n            }\n            onClick={() => {\n                setMode(id)\n                if (id === 0) {\n                    setHistoLimit({ histo: 'minute', limit: '60' })\n                    setLabels(labelsObj.hour)\n                } else if (id === 1) {\n                    setHistoLimit({ histo: 'hour', limit: '24' })\n                    setLabels(labelsObj.day)\n                } else if (id === 2) {\n                    setHistoLimit({ histo: 'day', limit: '7' })\n                    setLabels(labelsObj.week)\n                } else if (id === 3) {\n                    setHistoLimit({ histo: 'day', limit: '30' })\n                    setLabels(labelsObj.month)\n                } else {\n                    setHistoLimit({ histo: 'day', limit: '365' })\n                    setLabels(labelsObj.year)\n                }\n            }}\n        >\n            {text}\n        </div>\n    )\n}\n","import React from 'react'\nimport './CryptoChartLineChart.css'\nimport { Line } from 'react-chartjs-2'\n\nexport default function CryptoChartLineChart({ labels, data }) {\n    return (\n        <div className=\"CryptoChartLineChart\">\n            <Line\n                data={{\n                    labels: labels,\n                    datasets: [\n                        {\n                            label: '',\n                            data: data,\n                            fill: false,\n                            borderColor: '#00A8CC',\n                            tension: 0.1,\n                            borderWidth: 3,\n                        },\n                    ],\n                }}\n                options={{\n                    plugins: {\n                        legend: {\n                            display: false,\n                        },\n                        tooltip: {\n                            enabled: false,\n                        },\n                    },\n                }}\n            />\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport './CryptoChart.css'\nimport {\n    periodValues,\n    labelsHour,\n    labelsDay,\n    labelsWeek,\n    labelsMonth,\n    labelsYear,\n} from './definitions'\nimport CryptoChartPeriodValue from '../CryptoChartPeriodValue/CryptoChartPeriodValue'\nimport CryptoChartLineChart from '../CryptoChartLineChart/CryptoChartLineChart'\n\nexport default function CryptoChart({\n    resultValue = 'Loading...',\n    crypto,\n    fiat,\n}) {\n    const labelsObj = {\n        hour: labelsHour,\n        day: labelsDay,\n        week: labelsWeek,\n        month: labelsMonth,\n        year: labelsYear,\n    }\n    const [labels, setLabels] = useState(labelsObj.hour)\n\n    const [mode, setMode] = useState(0)\n    const [histoLimit, setHistoLimit] = useState({\n        histo: 'minute',\n        limit: '60',\n    })\n    const [priceArr, setPriceArr] = useState([])\n    let helper = []\n    const fetching = () => {\n        fetch(\n            `https://min-api.cryptocompare.com/data/v2/histo${histoLimit.histo}?fsym=${crypto}&tsym=${fiat}&limit=${histoLimit.limit}&api_key={b60442d7af5486b93c4301d0a95204ee0711ec95f4fc2f8b2379e68dc93590a3}`\n        )\n            .then((res) => res.json())\n            .then((data) => {\n                data.Data.Data.map((d) => helper.push(d.open))\n                setPriceArr(helper)\n            })\n    }\n    useEffect(() => {\n        setPriceArr([])\n        fetching()\n    }, [mode, crypto, fiat])\n\n    return (\n        <div className=\"CryptoChart\">\n            <div className=\"CryptoChart__container\">\n                <div className=\"CryptoChart__header\">\n                    <div className=\"CryptoChart__result\">\n                        {crypto} ={' '}\n                        <span className=\"text-white\">{resultValue}</span> {fiat}\n                    </div>\n                    <div className=\"CryptoChart__period\">\n                        {periodValues.map((value) => (\n                            <CryptoChartPeriodValue\n                                key={value.id}\n                                id={value.id}\n                                text={value.text}\n                                mode={mode}\n                                setMode={setMode}\n                                setHistoLimit={setHistoLimit}\n                                labelsObj={labelsObj}\n                                setLabels={setLabels}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <CryptoChartLineChart\n                    mode={mode}\n                    labels={labels}\n                    data={priceArr}\n                />\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport './ExchangeRates.css'\nimport Exchange from '../../components/Exchange/Exchange'\nimport CryptoChart from '../../components/CryptoChart/CryptoChart'\n\nexport default function ExchangeRates() {\n    const [crypto, setCrypto] = useState('BTC')\n    const [fiat, setFiat] = useState('USD')\n    const [resultValue, setResultValue] = useState()\n\n    useEffect(() => {\n        fetch(\n            `https://min-api.cryptocompare.com/data/price?fsym=${crypto}&tsyms=${fiat}&api_key={b60442d7af5486b93c4301d0a95204ee0711ec95f4fc2f8b2379e68dc93590a3}`\n        )\n            .then((res) => res.json())\n            .then((data) => setResultValue(data[fiat]))\n    }, [crypto, fiat])\n\n    return (\n        <div className=\"ExchangeRates\">\n            <Exchange setCrypto={setCrypto} setFiat={setFiat} />\n            <CryptoChart\n                resultValue={resultValue}\n                crypto={crypto}\n                fiat={fiat}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport './HeaderLogo.css'\n\nexport default function HeaderLogo() {\n    return (\n        <div className=\"HeaderLogo\">\n            <p className=\"HeaderLogo__title\">\n                <span className=\"text-accent\">C</span>\n                rypto\n            </p>\n            <p className=\"HeaderLogo__subtitle\">\n                current <span className=\"text-accent\">c</span>rypto exchange\n                rates\n            </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport HeaderLogo from '../HeaderLogo/HeaderLogo'\nimport './Header.css'\n\nexport default function Header() {\n    return (\n        <header className=\"Header\">\n            <div className=\"container\">\n                <div className=\"Header__container\">\n                    <HeaderLogo />\n                </div>\n            </div>\n        </header>\n    )\n}\n","import React from 'react'\nimport ExchangeRates from './pages/ExchangeRates/ExchangeRates'\nimport Header from './components/Header/Header'\n\nimport { Chart } from 'react-chartjs-2'\nChart.defaults.font.family = 'Open Sans, sans-serif'\nChart.defaults.scale.ticks.color = '#fff'\nChart.defaults.scale.grid.borderColor = '#fff'\nChart.defaults.scale.grid.borderWidth = 3\nChart.defaults.scale.grid.display = false\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n                <ExchangeRates />\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}